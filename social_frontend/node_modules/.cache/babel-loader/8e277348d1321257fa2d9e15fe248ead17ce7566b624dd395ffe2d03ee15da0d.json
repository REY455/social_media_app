{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\social-media\\\\social_frontend\\\\src\\\\UpdatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdatePost() {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const [postData, setPostData] = useState({\n    title: '',\n    content: ''\n  });\n  const [file, setFile] = useState(null);\n  useEffect(() => {\n    // Fetch the post details using the postId from the URL\n    axios.get(\"${API_BASE_URL}/api/posts\").then(response => {\n      const post = response.data.find(p => p._id === postId);\n      if (post) {\n        setPostData({\n          title: post.title,\n          content: post.content\n        });\n      } else {\n        alert(\"Post not found\");\n        navigate(\"/\");\n      }\n    }).catch(error => console.error(\"Error fetching post data:\", error));\n  }, [postId, navigate]);\n  const handleChange = e => {\n    setPostData({\n      ...postData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", postData.title);\n    formData.append(\"content\", postData.content);\n    if (file) {\n      formData.append(\"file\", file);\n    }\n    axios.put(`${API_BASE_URL}/api/posts/${postId}`, formData).then(response => {\n      console.log(\"Post updated:\", response.data);\n      navigate(\"/\");\n    }).catch(error => console.error(\"Error updating post:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: postData.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"content\",\n        placeholder: \"Content\",\n        value: postData.content,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdatePost, \"5It2l9N/qngtpC5HryGgmqR31T0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdatePost;\nexport default UpdatePost;\nvar _c;\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","UpdatePost","_s","postId","navigate","postData","setPostData","title","content","file","setFile","get","then","response","post","data","find","p","_id","alert","catch","error","console","handleChange","e","target","name","value","handleSubmit","preventDefault","formData","FormData","append","put","API_BASE_URL","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","files","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/social-media/social_frontend/src/UpdatePost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nfunction UpdatePost() {\r\n  const { postId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [postData, setPostData] = useState({ title: '', content: '' });\r\n  const [file, setFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch the post details using the postId from the URL\r\n    axios.get(\"${API_BASE_URL}/api/posts\")\r\n      .then(response => {\r\n        const post = response.data.find(p => p._id === postId);\r\n        if (post) {\r\n          setPostData({ title: post.title, content: post.content });\r\n        } else {\r\n          alert(\"Post not found\");\r\n          navigate(\"/\");\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error fetching post data:\", error));\r\n  }, [postId, navigate]);\r\n\r\n  const handleChange = (e) => {\r\n    setPostData({\r\n      ...postData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"title\", postData.title);\r\n    formData.append(\"content\", postData.content);\r\n    if (file) {\r\n      formData.append(\"file\", file);\r\n    }\r\n    axios.put(`${API_BASE_URL}/api/posts/${postId}`, formData)\r\n      .then(response => {\r\n        console.log(\"Post updated:\", response.data);\r\n        navigate(\"/\");\r\n      })\r\n      .catch(error => console.error(\"Error updating post:\", error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-post\">\r\n      <h2>Update Post</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input \r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          value={postData.title}\r\n          onChange={handleChange}\r\n        /><br/>\r\n        <textarea \r\n          name=\"content\"\r\n          placeholder=\"Content\"\r\n          value={postData.content}\r\n          onChange={handleChange}\r\n        /><br/>\r\n        <input \r\n          type=\"file\"\r\n          onChange={e => setFile(e.target.files[0])}\r\n        /><br/>\r\n        <button type=\"submit\">Update Post</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePost;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EACpE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACe,GAAG,CAAC,2BAA2B,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKf,MAAM,CAAC;MACtD,IAAIW,IAAI,EAAE;QACRR,WAAW,CAAC;UAAEC,KAAK,EAAEO,IAAI,CAACP,KAAK;UAAEC,OAAO,EAAEM,IAAI,CAACN;QAAQ,CAAC,CAAC;MAC3D,CAAC,MAAM;QACLW,KAAK,CAAC,gBAAgB,CAAC;QACvBf,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,CAAC,CACDgB,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,CAAClB,MAAM,EAAEC,QAAQ,CAAC,CAAC;EAEtB,MAAMmB,YAAY,GAAIC,CAAC,IAAK;IAC1BlB,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACmB,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE3B,QAAQ,CAACE,KAAK,CAAC;IACxCuB,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE3B,QAAQ,CAACG,OAAO,CAAC;IAC5C,IAAIC,IAAI,EAAE;MACRqB,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEvB,IAAI,CAAC;IAC/B;IACAb,KAAK,CAACqC,GAAG,CAAC,GAAGC,YAAY,cAAc/B,MAAM,EAAE,EAAE2B,QAAQ,CAAC,CACvDlB,IAAI,CAACC,QAAQ,IAAI;MAChBS,OAAO,CAACa,GAAG,CAAC,eAAe,EAAEtB,QAAQ,CAACE,IAAI,CAAC;MAC3CX,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,CACDgB,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC;EAED,oBACErB,OAAA;IAAKoC,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BrC,OAAA;MAAAqC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBzC,OAAA;MAAM0C,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBAC3BrC,OAAA;QACE2C,IAAI,EAAC,MAAM;QACXjB,IAAI,EAAC,OAAO;QACZkB,WAAW,EAAC,OAAO;QACnBjB,KAAK,EAAEtB,QAAQ,CAACE,KAAM;QACtBsC,QAAQ,EAAEtB;MAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eAAAzC,OAAA;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACPzC,OAAA;QACE0B,IAAI,EAAC,SAAS;QACdkB,WAAW,EAAC,SAAS;QACrBjB,KAAK,EAAEtB,QAAQ,CAACG,OAAQ;QACxBqC,QAAQ,EAAEtB;MAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eAAAzC,OAAA;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACPzC,OAAA;QACE2C,IAAI,EAAC,MAAM;QACXE,QAAQ,EAAErB,CAAC,IAAId,OAAO,CAACc,CAAC,CAACC,MAAM,CAACqB,KAAK,CAAC,CAAC,CAAC;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eAAAzC,OAAA;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACPzC,OAAA;QAAQ2C,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACvC,EAAA,CArEQD,UAAU;EAAA,QACEJ,SAAS,EACXC,WAAW;AAAA;AAAAiD,EAAA,GAFrB9C,UAAU;AAuEnB,eAAeA,UAAU;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}